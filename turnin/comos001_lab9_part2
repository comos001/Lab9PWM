/*	Author: victoromosor
 *  Partner(s) Name: 
 *	Lab Section:
 *	Assignment: Lab #  Exercise #
 *	Exercise Description: [optional - include for your own benefit]
 *
 *	I acknowledge all content contained herein, excluding template or example
 *	code, is my own original work.
 */
#include <avr/io.h>
#ifdef _SIMULATE_
#include "simAVRHeader.h"
#include "pwm.h"
#include "timer.h"
#endif

//Video: https://drive.google.com/open?id=1mdvKFb5sCMoXt4jHsmTzqiW2wscfGLL_


enum BL_States {OFF, Start, ScaleUp, ScaleDown} state;
double tsolfa[] = {261.63, 293.66, 329.63, 349.23, 392.00, 440.00, 493.85, 523.25};
unsigned char i = 0;
void TickFct_Blink() {

   switch ( state ) { //Transitions

      case OFF:
	if ((PINA & 0x01) == 0x00){
		state = Start;
	}
	else{	
		state = OFF;
	}
      case Start:
	if ((PINA & 0x02) == 0x00){
		state = ScaleUp;
		if (i < 7){
			i++;
		}
	}
	else if ((PINA & 0x04) == 0x00){
		state = ScaleDown;
		if (i > 0){
			i--; 
		}
	}
	else if ((PINA & 0x01) == 0x00){ 
		state = OFF;
	}
	else {
		state = Start;
	}
         break;
      case ScaleUp:
	if ((PINA & 0x02) == 0x00){
		state = ScaleUp;
	}
	else {
		state = Start;	
	}
         break;
      case ScaleDown:
        if ((PINA & 0x04) == 0x00){
                state = ScaleDown;
        }
        else {  
                state = Start;
        }
         break;
       default: 
	state = Start;
	break;

   }

   switch (state) { //State actions
      case OFF:
	set_PWM(0);
      case Start:
         break;
      case ScaleUp:
         set_PWM(tsolfa[i]);
         break;
      case ScaleDown:
	 set_PWM(tsolfa[i]);
	 break;
      default:
         break;
   }
}

int main(void) {
   DDRA = 0x00; PORTA = 0xFF;
   DDRB = 0xFF; PORTB = 0x00;
   
   TimerSet(50);
   TimerOn();
   PWM_on(); 
   PORTB = 0x01; 
   state = Start; // Indicates initial call to tick-fct
   while (1) {         
      while (!TimerFlag){}  // Wait for BL's period
      TimerFlag = 0;        // Lower flag
      TickFct_Blink();
    }

    return 1;
}
